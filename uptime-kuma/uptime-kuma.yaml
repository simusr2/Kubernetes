apiVersion: v1
kind: Namespace
metadata:
  name: uptime-kuma
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: uptime-kuma-pv
  namespace: uptime-kuma
  labels:
    type: local
spec:
  storageClassName: microk8s-hostpath
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/tmp/uptime-kuma"
  persistentVolumeReclaimPolicy: Retain
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uptime-kuma-pvc
  namespace: uptime-kuma
spec:
  storageClassName: "microk8s-hostpath" # Empty string must be explicitly set otherwise default StorageClass will be set
  volumeName: uptime-kuma-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
  labels:
    env: prod
    owner: sanile
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
        - name: uptime-kuma
          # image: nginx:latest
          image: louislam/uptime-kuma:1.16.1-debian
          ports:
          - name: http
            containerPort: 3001
          readinessProbe:
            httpGet:
              path: /
              port: 3001
          livenessProbe:
            httpGet:
              path: /
              port: 3001
          volumeMounts: 
            - mountPath: /app/data
              name: uptime-kuma-volume
      volumes:
        - name: uptime-kuma-volume
          persistentVolumeClaim:
            claimName: uptime-kuma-pvc 
---
apiVersion: v1
kind: Service
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  selector:
    app: uptime-kuma
  type: ClusterIP
  ports:
  - name: http
    port: 3001
    targetPort: 3001
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-kuma-ingress
  namespace: uptime-kuma
  annotations:
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "acme-issuer"
spec:
  rules:
  - host: uptime.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uptime-kuma
            port:
              number: 3001
  tls:
    - hosts:
        - uptime.example.com
      secretName: uptime-kuma-ingress-tls
